// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SacramentPlanner.Data;

namespace SacramentPlanner.Migrations
{
    [DbContext(typeof(SacramentPlannerContext))]
    partial class SacramentPlannerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SacramentPlanner.Models.Hymn", b =>
                {
                    b.Property<int>("HymnID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HymnNumber")
                        .HasColumnType("int");

                    b.Property<string>("HymnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HymnType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HymnID");

                    b.ToTable("Hymn");
                });

            modelBuilder.Entity("SacramentPlanner.Models.SacramentPlan", b =>
                {
                    b.Property<int>("SacramentPlanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Benediction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClosingHymnHymnID")
                        .HasColumnType("int");

                    b.Property<string>("Conducting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Invocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfSpeakers")
                        .HasColumnType("int");

                    b.Property<int?>("OpeningHymnHymnID")
                        .HasColumnType("int");

                    b.Property<int?>("SacramentHymnHymnID")
                        .HasColumnType("int");

                    b.HasKey("SacramentPlanID");

                    b.HasIndex("ClosingHymnHymnID");

                    b.HasIndex("OpeningHymnHymnID");

                    b.HasIndex("SacramentHymnHymnID");

                    b.ToTable("SacramentPlan");
                });

            modelBuilder.Entity("SacramentPlanner.Models.Speaker", b =>
                {
                    b.Property<int>("SpeakerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SacramentPlanID")
                        .HasColumnType("int");

                    b.HasKey("SpeakerID");

                    b.HasIndex("SacramentPlanID");

                    b.ToTable("Speaker");
                });

            modelBuilder.Entity("SacramentPlanner.Models.SacramentPlan", b =>
                {
                    b.HasOne("SacramentPlanner.Models.Hymn", "ClosingHymn")
                        .WithMany()
                        .HasForeignKey("ClosingHymnHymnID");

                    b.HasOne("SacramentPlanner.Models.Hymn", "OpeningHymn")
                        .WithMany()
                        .HasForeignKey("OpeningHymnHymnID");

                    b.HasOne("SacramentPlanner.Models.Hymn", "SacramentHymn")
                        .WithMany()
                        .HasForeignKey("SacramentHymnHymnID");
                });

            modelBuilder.Entity("SacramentPlanner.Models.Speaker", b =>
                {
                    b.HasOne("SacramentPlanner.Models.SacramentPlan", null)
                        .WithMany("Speakers")
                        .HasForeignKey("SacramentPlanID");
                });
#pragma warning restore 612, 618
        }
    }
}
